:: DisplayOptions [nobr]
/* ordered list of options, included in the DisplayParagraph widget in the PassageFooter. you don't need to do anything else with this passage!


first line creates an ordered list
*/
<ol id="OptionList">
/* for each text (key) and passage (value) in $optionmap, capture those things.*/ 
<<for _optiontext, _optionpassage range $optionmap>>
  <<capture _optionpassage, _optiontext>>
  /*
  if _optionpassage[2] (the skill indicating that the option is a check) exists, 
    rewrite _optiontext as [skill + difficulty label]
      ex: [Visual Calculus - Heroic]
    + _optiontext
    put the .check styling to a link with _optiontext as its text.
    sets the $lastoption variable, used in the PassageHeader passage, to _optiontext
    
    args[0] = text for the option.
    args[1] = _optionspassage (an array)
    _optionspassage[0] = the passage that the option sends you to

    1 = determines whether it's a check (must be set to true or false!)

    if it's got a flag attached
    2 = variable in $flagsMap
    3 = variable's value
    
    */

/* if there's a 3rd variable in the _optionspassage array  (indicating it's a variable setter) and it's in $flagsMap
  set the $flagsMap's variable to the value */

/* if there's a 2nd variable in the _optionspassage array (indicating that it's a check) and the check is true,
  format it with the .check styling and make it a link */  
  <<if _optionpassage[1] and _optionpassage[1] == true>>
  /* if there's a 3rd variable in the _optionspassage array  (indicating it's a variable setter) and it's in $flagsMap
  set the $flagsMap's variable to the value*/
      @@.check;<li>-
        <<link _optiontext _optionpassage[0]>>
          <<if _optionpassage[2] and Object.keys($flagsMap).includes(_optionpassage[2])>>
            <<set $flagsMap[_optionpassage[2]] to _optionpassage[3]>>
          <</if>>
          <<set $lastoption to _optiontext>>
        <</link>>
      </li>@@
/* otherwise, put the .option style on a link and that's it*/
  <<else>>
  /* if there's a 3rd variable in the _optionspassage array  (indicating it's a variable setter) and it's in $flagsMap
  set the $flagsMap's variable to the value.*/
      @@.option;<li>-
        <<link _optiontext _optionpassage[0]>>
          <<if _optionpassage[2] and Object.keys($flagsMap).includes(_optionpassage[2])>>
            <<set $flagsMap[_optionpassage[2]] to _optionpassage[3]>>
          <</if>>
          <<set $lastoption to _optiontext>>
        <</link>>
      </li>@@
  <</if>>
  <</capture>>
<</for>>
/* closing off ordered list and resetting $optionmap*/
</ol>
<<set $optionmap to new Map()>>